/*
 * This file is generated by jOOQ.
 */
package io.github.lubosgarancovsky.aurora.repository.model;


import io.github.lubosgarancovsky.aurora.repository.model.tables.FlywaySchemaHistory;
import io.github.lubosgarancovsky.aurora.repository.model.tables.Links;
import io.github.lubosgarancovsky.aurora.repository.model.tables.Partners;
import io.github.lubosgarancovsky.aurora.repository.model.tables.ProjectBoard;
import io.github.lubosgarancovsky.aurora.repository.model.tables.Projects;
import io.github.lubosgarancovsky.aurora.repository.model.tables.Requests;
import io.github.lubosgarancovsky.aurora.repository.model.tables.StoryState;
import io.github.lubosgarancovsky.aurora.repository.model.tables.TeamPartner;
import io.github.lubosgarancovsky.aurora.repository.model.tables.Teams;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.FlywaySchemaHistoryRecord;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.LinksRecord;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.PartnersRecord;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.ProjectBoardRecord;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.ProjectsRecord;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.RequestsRecord;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.StoryStateRecord;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.TeamPartnerRecord;
import io.github.lubosgarancovsky.aurora.repository.model.tables.records.TeamsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<LinksRecord> LINKS_PKEY = Internal.createUniqueKey(Links.LINKS, DSL.name("links_pkey"), new TableField[] { Links.LINKS.ID }, true);
    public static final UniqueKey<PartnersRecord> PARTNERS_PKEY = Internal.createUniqueKey(Partners.PARTNERS, DSL.name("partners_pkey"), new TableField[] { Partners.PARTNERS.ID }, true);
    public static final UniqueKey<ProjectBoardRecord> PROJECT_BOARD_PKEY = Internal.createUniqueKey(ProjectBoard.PROJECT_BOARD, DSL.name("project_board_pkey"), new TableField[] { ProjectBoard.PROJECT_BOARD.ID }, true);
    public static final UniqueKey<ProjectsRecord> PROJECTS_PKEY = Internal.createUniqueKey(Projects.PROJECTS, DSL.name("projects_pkey"), new TableField[] { Projects.PROJECTS.ID }, true);
    public static final UniqueKey<RequestsRecord> REQUESTS_PKEY = Internal.createUniqueKey(Requests.REQUESTS, DSL.name("requests_pkey"), new TableField[] { Requests.REQUESTS.ID }, true);
    public static final UniqueKey<StoryStateRecord> STORY_STATE_PKEY = Internal.createUniqueKey(StoryState.STORY_STATE, DSL.name("story_state_pkey"), new TableField[] { StoryState.STORY_STATE.ID }, true);
    public static final UniqueKey<TeamPartnerRecord> TEAM_PARTNER_PKEY = Internal.createUniqueKey(TeamPartner.TEAM_PARTNER, DSL.name("team_partner_pkey"), new TableField[] { TeamPartner.TEAM_PARTNER.ID }, true);
    public static final UniqueKey<TeamsRecord> TEAMS_PKEY = Internal.createUniqueKey(Teams.TEAMS, DSL.name("teams_pkey"), new TableField[] { Teams.TEAMS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<LinksRecord, ProjectsRecord> LINKS__LINKS_PROJECT_ID_FKEY = Internal.createForeignKey(Links.LINKS, DSL.name("links_project_id_fkey"), new TableField[] { Links.LINKS.PROJECT_ID }, Keys.PROJECTS_PKEY, new TableField[] { Projects.PROJECTS.ID }, true);
    public static final ForeignKey<ProjectBoardRecord, ProjectsRecord> PROJECT_BOARD__PROJECT_BOARD_PROJECT_ID_FKEY = Internal.createForeignKey(ProjectBoard.PROJECT_BOARD, DSL.name("project_board_project_id_fkey"), new TableField[] { ProjectBoard.PROJECT_BOARD.PROJECT_ID }, Keys.PROJECTS_PKEY, new TableField[] { Projects.PROJECTS.ID }, true);
    public static final ForeignKey<ProjectBoardRecord, StoryStateRecord> PROJECT_BOARD__PROJECT_BOARD_STATE_ID_FKEY = Internal.createForeignKey(ProjectBoard.PROJECT_BOARD, DSL.name("project_board_state_id_fkey"), new TableField[] { ProjectBoard.PROJECT_BOARD.STATE_ID }, Keys.STORY_STATE_PKEY, new TableField[] { StoryState.STORY_STATE.ID }, true);
    public static final ForeignKey<ProjectsRecord, PartnersRecord> PROJECTS__PROJECTS_CREATED_BY_FKEY = Internal.createForeignKey(Projects.PROJECTS, DSL.name("projects_created_by_fkey"), new TableField[] { Projects.PROJECTS.CREATED_BY }, Keys.PARTNERS_PKEY, new TableField[] { Partners.PARTNERS.ID }, true);
    public static final ForeignKey<TeamPartnerRecord, PartnersRecord> TEAM_PARTNER__TEAM_PARTNER_PARTNER_ID_FKEY = Internal.createForeignKey(TeamPartner.TEAM_PARTNER, DSL.name("team_partner_partner_id_fkey"), new TableField[] { TeamPartner.TEAM_PARTNER.PARTNER_ID }, Keys.PARTNERS_PKEY, new TableField[] { Partners.PARTNERS.ID }, true);
    public static final ForeignKey<TeamPartnerRecord, TeamsRecord> TEAM_PARTNER__TEAM_PARTNER_TEAM_ID_FKEY = Internal.createForeignKey(TeamPartner.TEAM_PARTNER, DSL.name("team_partner_team_id_fkey"), new TableField[] { TeamPartner.TEAM_PARTNER.TEAM_ID }, Keys.TEAMS_PKEY, new TableField[] { Teams.TEAMS.ID }, true);
    public static final ForeignKey<TeamsRecord, PartnersRecord> TEAMS__TEAMS_CREATED_BY_FKEY = Internal.createForeignKey(Teams.TEAMS, DSL.name("teams_created_by_fkey"), new TableField[] { Teams.TEAMS.CREATED_BY }, Keys.PARTNERS_PKEY, new TableField[] { Partners.PARTNERS.ID }, true);
    public static final ForeignKey<TeamsRecord, ProjectsRecord> TEAMS__TEAMS_PROJECT_ID_FKEY = Internal.createForeignKey(Teams.TEAMS, DSL.name("teams_project_id_fkey"), new TableField[] { Teams.TEAMS.PROJECT_ID }, Keys.PROJECTS_PKEY, new TableField[] { Projects.PROJECTS.ID }, true);
}
